"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.sign = void 0;
const xml_crypto_1 = require("xml-crypto");
const cert_1 = require("./cert");
const issuerXPath = '/*[local-name(.)="Issuer" and namespace-uri(.)="urn:oasis:names:tc:SAML:2.0:assertion"]';
const sign = (xml, signingKey, publicKey, xPath) => {
    if (!xml) {
        throw new Error('Please specify xml');
    }
    if (!signingKey) {
        throw new Error('Please specify signingKey');
    }
    const sig = new xml_crypto_1.SignedXml({
        privateKey: signingKey,
        signatureAlgorithm: 'http://www.w3.org/2001/04/xmldsig-more#rsa-sha256',
        getKeyInfoContent: (0, cert_1.PubKeyInfo)(publicKey),
        canonicalizationAlgorithm: 'http://www.w3.org/2001/10/xml-exc-c14n#',
    });
    sig.addReference({
        xpath: xPath,
        transforms: [
            'http://www.w3.org/2000/09/xmldsig#enveloped-signature',
            'http://www.w3.org/2001/10/xml-exc-c14n#',
        ],
        digestAlgorithm: 'http://www.w3.org/2001/04/xmlenc#sha256',
    });
    sig.computeSignature(xml, {
        location: { reference: xPath + issuerXPath, action: 'after' },
    });
    return sig.getSignedXml();
};
exports.sign = sign;
